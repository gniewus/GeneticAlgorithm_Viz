/*!
 * Start Bootstrap - Grayscale v5.0.3 (https://startbootstrap.com/template-overviews/grayscale)
 * Copyright 2013-2019 Start Bootstrap
 * Licensed under MIT (https://github.com/BlackrockDigital/startbootstrap-grayscale/blob/master/LICENSE)
 */

"use strict";function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t)){for(var e=0,i=new Array(t.length);e<t.length;e++)i[e]=t[e];return i}}var population,stats,track,block,collision,blockParams,fitnessChart,myChart,targets=[],step=0,lifetime=1e3,generation=0,maxForce=.5,populationSize=64,elitePercentage=20,globalCounter=0,carsLeft=populationSize,blocks=[],nodes=new Set,links=new Set,window=(void 0).window,TargetReached=!1,playing=!0;function setup(){var t=$("#game_container").width(),e=createCanvas(t,400);blockParams=[{x:-100,y:-150,w:200,h:200},{x:140,y:-150,w:200,h:200},{x:width-100,y:-150,w:200,h:200},{x:-100,y:90,w:200,h:200},{x:150,y:150,w:240,h:80},{x:320,y:80,w:20,h:50},{x:width-100,y:90,w:200,h:200},{x:-100,y:height-50,w:200,h:200},{x:140,y:height-50,w:200,h:200},{x:width-100,y:height-50,w:200,h:200}],e.parent("game_container"),button=createButton("Stop"),button.parent("cta"),button.class("btn btn-info"),button.mousePressed(function(t){playing?(noLoop(),button.html("play")):(loop(),button.html("pause")),playing=!playing}),repeatBtn=createButton("Replay"),repeatBtn.parent("navbarResponsive"),repeatBtn.class("btn btn-danger"),repeatBtn.mousePressed(function(t){reset(),reset_sankey(),myChart.reset(),removeData(myChart)}),population=new Population(width-50,height-70,5,10),textSize(30),textAlign(CENTER,CENTER),fill(255),targets.push(new Target(180,110,25,25)),stats=new Stats;for(var i=0;i<blockParams.length;i++)blocks.push(new Block(blockParams[i]));window.sharedSpace={population_size:populationSize,nodes:_toConsumableArray(nodes),links:_toConsumableArray(links)},collision=new Collision,fitnessChart=document.getElementById("myChart").getContext("2d")}function reset(){targets=[],lifetime=1e3,maxForce=.5,elitePercentage=20,globalCounter=generation=step=0,carsLeft=populationSize=64,nodes=new Set,links=new Set,population=new Population(width-50,height-70,5,10),this.generationCounter=text("Generation:",10,30),textSize(30),textAlign(CENTER,CENTER),fill(255),targets.push(new Target(120,280,20,20));for(var t=0;t<blockParams.length;t++)blocks.push(new Block(blockParams[t]));stats.reset_data(),window.sharedSpace.nodes=_toConsumableArray(nodes),window.sharedSpace.links=_toConsumableArray(links),appendNewData(window.sharedSpace),collision=new Collision}function draw(){if(background(27,27,27),targets.forEach(function(t){t.show()}),blocks.forEach(function(t){t.show()}),text("Generation "+generation,width/2,height/2),text(step,30,20),population.run(),++step==lifetime||carsLeft<=0){if(population.evaluate(),carsLeft<=0){window.sharedSpace={population_size:populationSize,nodes:_toConsumableArray(nodes),links:_toConsumableArray(links)};try{1==generation?intialize(window.sharedSpace):appendNewData(window.sharedSpace)}catch(t){console.log(t.message)}}step=0,carsLeft=populationSize}}function Block(t){this.width=t.w||10,this.height=t.h||10,this.x=t.x||0,this.y=t.y||0,this.show=function(){fill(27,27,27),strokeWeight(3),stroke(150,135,135),rect(this.x,this.y,this.width,this.height)}}function Collision(){this.detect=function(t,e){for(var i=0;i<blocks.length;i++)if(t>blocks[i].x&&t<blocks[i].x+blocks[i].width&&e>blocks[i].y&&e<blocks[i].y+blocks[i].height)return!0}}function Car(n,o,r,h,t){this.width=r,this.length=h,this.position=createVector(n,o),this.velocity=createVector(),this.acceleration=createVector(),this.dna=t||new DNA,this.fitness=0,this.complited=!1,this.disqualified=!1,this.removed=!1,this.step=0,this.targetId=0,this.color="#11ba00",this.finish=!1,this.carId=i(),this.genTree=[],this.regenerateId=function(){return i()},this.damageCounter=0,this.bounce=function(t,e,i){this.damageCounter++;this.dna.getLastGene(i);var s=this.dna.getNextGene(i);1==this.damageCounter?this.color="#e6fe00":2==this.damageCounter&&(this.color="#ad0001"),this.dna.genes[i+1]=s.rotate(PI/2*Math.random()),this.applyForce(this.dna.genes[i]),this.velocity.mult(-1),this.position.add(this.velocity)};var e=this;function i(){return ctr=globalCounter,globalCounter++,ctr}this.appendToList=function(){nodes.add({name:this.carId,fitness:this.fitness,size:0,complited:this.complited,generation:generation}),this.genTree.forEach(function(t){2==t.length?(links.add({source:t[0],target:e.carId,generation:generation,type:"crossover",op:0}),links.add({source:t[1],target:e.carId,generation:generation,type:"crossover",op:0})):1==t.length&&links.add({source:t[0],target:e.carId,type:"elite",op:1})})},this.removeFromList=function(){this.removed||(carsLeft--,this.removed=!0,this.step=step)},this.crossover=function(t){for(var e=new Car(n,o,r,h),i=this.dna.getLength(),s=floor(random(i)),a=0;a<i;a++)e.dna.genes[a]=s<a?this.dna.genes[a]:t.dna.genes[a];return e.genTree.push([this.carId,t.carId]),e.dna.mutation(),e},this.mutate=function(t){t.dna.mutation()},this.calcFitness=function(){var t=dist(this.position.x,this.position.y,targets[this.targetId].position.x,targets[this.targetId].position.y);this.fitness=1/t*100,this.complited&&(this.fitness*=1+1e3/this.step)},this.applyForce=function(t){this.acceleration.add(t)},this.changeTarget=function(){if(this.complited){var t=this.targetId+1;this.color=["#4124fb","#fc0d1b","yellow","black"][t],t<targets.length?(this.targetId=t,this.complited=!1):(this.finish=!0,this.complited=!0,this.removeFromList())}},this.move=function(){targets[this.targetId].detect(this.position.x,this.position.y)&&(this.complited=!0,this.changeTarget(),this.fitness=100),!this.disqualified&&collision.detect(this.position.x,this.position.y)&&(this.disqualified=!0,this.removeFromList()),this.disqualified||(this.position.x>width||this.position.x<0||this.position.y>height||this.position.y<0)&&(this.disqualified=!0,this.removeFromList()),this.applyForce(this.dna.genes[step]),this.finish||this.disqualified||(this.velocity.add(this.acceleration),this.position.add(this.velocity),this.acceleration.mult(0),this.velocity.limit(4)),this.design()},this.design=function(){push(),noStroke(),translate(this.position.x,this.position.y),rotate(this.velocity.heading()),rectMode(CENTER),fill(this.color),rect(0,0,this.length,this.width),pop()}}function Population(r,h,c,l){this.cars=[],this.size=populationSize;for(var t=0;t<this.size;t++)this.cars[t]=new Car(r,h,c,l);this.evaluate=function(){for(var t=0,e=0;e<this.size;e++)this.cars[e].calcFitness(),this.cars[e].fitness>t&&(t=this.cars[e].fitness),this.cars[e].appendToList();var i=0;for(e=0;e<this.size;e++)i+=this.cars[e].fitness;stats.appendNewRecord([t,i/this.size]);for(e=0;e<this.size;e++)this.cars[e].complited&&(TargetReached=!0);this.cars=this.cars.sort(function(t,e){return t.fitness>e.fitness?-1:t.fitness<e.fitness?1:0}),this.matingPool=[];for(e=0;e<this.size;e++)for(var s=1e3*this.cars[e].fitness,a=0;a<s;a++)this.matingPool.push(this.cars[e]);this.elite=this.cars.slice(0,12),this.cars=[],this.breed(),generation++},this.breed=function(){for(var t=this.elite.map(function(t){var e=new Car(r,h,c,l);return e.dna.genes=t.dna.genes,e.genTree.push([t.carId]),e}),e=0;e<this.elite.length;e++)this.cars.push(t[e]);var i=population.size-this.cars.length;console.log(population.size,this.cars.length);for(var s=0;s<i;s++){var a=random(this.matingPool),n=random(this.matingPool),o=a.crossover(n);this.cars.push(o)}},this.run=function(){for(var t=0;t<population.size;t++)this.cars[t].move()}}function DNA(){this.genes=[];for(var t=0;t<lifetime;t++)this.genes[t]=p5.Vector.random2D(),this.genes[t].setMag(maxForce);this.getNextGene=function(t){return this.genes[t+1]},this.getLastGene=function(t){return this.genes[t-1]},this.getLength=function(){return this.genes.length},this.mutation=function(){for(var t=0;t<this.getLength();t++)random(1)<.01&&(this.genes[t]=p5.Vector.random2D(),this.genes[t].setMag(maxForce))}}function Target(t,e,i,s){this.position=createVector(t,e),this.width=i,this.height=s,this.show=function(){fill(255,255,255),noStroke(),ellipse(this.position.x,this.position.y,this.width,this.height)},this.detect=function(t,e){if(t>this.position.x&&t<this.position.x+this.width/2&&e>this.position.y&&e<this.position.y+this.height/2)return!0}}function Stats(){this.stats_data={max:[],avg:[]},this.reset_data=function(){this.stats_data={max:[],avg:[]}},this.appendNewRecord=function(t){addData(myChart,generation,[t[0],t[1]])},this.setMaxFitness=function(t){this.stats_data.max.push(t),this.maxFitnessText.html("max fitness: "+t)},this.setAvgFitness=function(t){this.avgFitnessText.html("avg fitness: "+t)},this.setSteps=function(t){this.stepsText.html("steps: "+t)},this.setCarsCount=function(t){this.carsCountText.html("cars left: "+t)}}function addData(t,e,i){t.data.labels.push(e),console.info(t.data.datasets);var s=0;t.data.datasets.forEach(function(t){t.data.push(i[s]),s++}),t.update()}function removeData(t){t.data.labels=[],t.data.datasets.forEach(function(t){t.data=[]}),t.update()}function mousePressed(t){}nodes.__proto__.has=function(e){var t=this.entries(),i=!1;return t.forEach(function(t){t.carId==e.calId&&(i=!0)}),i},window.onload=function(){myChart=new Chart.Line(fitnessChart,{type:"Line",data:{datasets:[{label:"Max fitness",borderWidth:.9,data:stats.stats_data.max,backgroundColor:["rgba(255, 99, 132, 0.2)","rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"],fill:!1,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"]},{label:"Avg fitness",borderWidth:.9,data:stats.stats_data.avg,backgroundColor:["rgba(54, 162, 235, 0.2)","rgba(255, 206, 86, 0.2)","rgba(75, 192, 192, 0.2)","rgba(153, 102, 255, 0.2)","rgba(255, 159, 64, 0.2)"],fill:!1,borderColor:["rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)","rgba(153, 102, 255, 1)","rgba(255, 159, 64, 1)"]}]},options:{responsive:!0,maintainAspectRatio:!1,skipNullValues:!0,scales:{xAxes:[{scaleLabel:{display:!0,labelString:"Generation"},ticks:{beginAtZero:!0}}],yAxes:[{scaleLabel:{display:!0,labelString:"Fitness"}}]}}})};